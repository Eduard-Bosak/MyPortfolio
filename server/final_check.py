#!/usr/bin/env python
import os
import sys
import django
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'portfolio_backend.settings')
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
django.setup()

from portfolio_cms.models import PortfolioPage, UISettings
from wagtail.models import Page

def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    checks = {
        "PortfolioPage": PortfolioPage.objects.count(),
        "UISettings": UISettings.objects.count(),
        "Total Pages": Page.objects.count(),
        "Live Pages": Page.objects.filter(live=True).count()
    }
    
    for check, count in checks.items():
        status = "‚úÖ" if count > 0 else "‚ùå"
        print(f"{status} {check}: {count}")
    
    return all(count > 0 for count in checks.values())

def check_wagtail_admin():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Wagtail –∞–¥–º–∏–Ω–∫–∏"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Wagtail –∞–¥–º–∏–Ω–∫–∏...")
    
    try:
        response = requests.get("http://localhost:8000/cms/", timeout=5)
        if response.status_code in [200, 302]:  # 302 - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω
            print("‚úÖ Wagtail –∞–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
            return True
        else:
            print(f"‚ùå Wagtail –∞–¥–º–∏–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–¥–º–∏–Ω–∫–∏: {str(e)}")
        return False

def check_main_site():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    try:
        response = requests.get("http://localhost:8000/", timeout=5)
        if response.status_code == 200:
            content = response.text
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            checks = [
                ("–ó–∞–≥–æ–ª–æ–≤–æ–∫ hero", "hero-title" in content or "–ü—Ä–∏–≤–µ—Ç! –Ø –≠–¥—É–∞—Ä–¥" in content),
                ("–ù–∞–≤–∏–≥–∞—Ü–∏—è", "nav" in content and "menu" in content.lower()),
                ("–°–µ–∫—Ü–∏—è about", "about" in content.lower()),
                ("–ö–æ–Ω—Ç–∞–∫—Ç—ã", "contact" in content.lower()),
                ("CSS —Å—Ç–∏–ª–∏", "style.css" in content),
                ("JavaScript", "script.js" in content)
            ]
            
            success = True
            for check_name, result in checks:
                status = "‚úÖ" if result else "‚ùå"
                print(f"{status} {check_name}")
                if not result:
                    success = False
            
            return success
        else:
            print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {str(e)}")
        return False

def check_api():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API...")
    
    endpoints = [
        "/api/",
        "/api/portfolio/",
        "/api/hero/",
        "/api/about/",
        "/api/contact/"
    ]
    
    success = True
    for endpoint in endpoints:
        try:
            response = requests.get(f"http://localhost:8000{endpoint}", timeout=5)
            status = "‚úÖ" if response.status_code in [200, 401] else "‚ùå"  # 401 –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö endpoints
            print(f"{status} {endpoint} (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            if response.status_code not in [200, 401]:
                success = False
        except Exception as e:
            print(f"‚ùå {endpoint} - –û—à–∏–±–∫–∞: {str(e)}")
            success = False
    
    return success

def check_wagtail_functionality():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Wagtail"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Wagtail...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        portfolio = PortfolioPage.objects.first()
        if not portfolio:
            print("‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞
        from django.test import RequestFactory
        request = RequestFactory().get('/')
        context = portfolio.get_context(request)
        
        required_context = ['hero', 'about', 'contact', 'ui', 'skill_categories', 'experiences', 'educations', 'projects']
        missing_context = [key for key in required_context if key not in context]
        
        if missing_context:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {missing_context}")
            return False
        else:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º UISettings
        ui_settings = UISettings.objects.first()
        if ui_settings:
            print("‚úÖ UISettings –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        else:
            print("‚ùå UISettings –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: {str(e)}")
        return False

def main():
    print("üöÄ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ö–û–ú–ü–õ–ï–ö–°–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–†–û–ï–ö–¢–ê")
    print("=" * 60)
    
    checks = [
        ("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", check_database),
        ("Wagtail –∞–¥–º–∏–Ω–∫–∞", check_wagtail_admin), 
        ("–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", check_main_site),
        ("API endpoints", check_api),
        ("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å Wagtail", check_wagtail_functionality)
    ]
    
    results = {}
    for check_name, check_func in checks:
        results[check_name] = check_func()
    
    print("\n" + "=" * 60)
    print("üìã –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    
    all_passed = True
    for check_name, result in results.items():
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{status:15} {check_name}")
        if not result:
            all_passed = False
    
    print("\n" + "=" * 60)
    if all_passed:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
        print("üìå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   ‚Ä¢ Wagtail –∞–¥–º–∏–Ω–∫–∞: http://localhost:8000/cms/")
        print("   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:8000/")
        print("   ‚Ä¢ API: http://localhost:8000/api/")
    else:
        print("‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤—ã—à–µ.")
    
    return all_passed

if __name__ == "__main__":
    main()
